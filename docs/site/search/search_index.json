{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sentiment Analysis Project Welcome to the Sentiment Analysis Project documentation. This project uses Hugging Face Transformers to perform sentiment analysis via a FastAPI web service. Overview This documentation covers: Setup instructions Usage examples Development guidelines Quick Links Setup Guide Usage Instructions","title":"Home"},{"location":"#sentiment-analysis-project","text":"Welcome to the Sentiment Analysis Project documentation. This project uses Hugging Face Transformers to perform sentiment analysis via a FastAPI web service.","title":"Sentiment Analysis Project"},{"location":"#overview","text":"This documentation covers: Setup instructions Usage examples Development guidelines","title":"Overview"},{"location":"#quick-links","text":"Setup Guide Usage Instructions","title":"Quick Links"},{"location":"setup/","text":"Setup Instructions This page documents all the steps needed to set up the Sentiment Analysis project environment. Prerequisites Python 3.10 or higher pip package manager Git Environment Setup Virtual Environment Create and activate a Python virtual environment: # Create a virtual environment python -m venv env # Activate the environment source env/bin/activate Required Packages Install FastAPI and other required packages: # Install FastAPI pip install fastapi # Install cookiecutter pip install cookiecutter # Install cookiecutter data science template pip install cookiecutter-data-science Transformers Setup Verify Transformers installation: # Verify Transformers is installed and importable python -c \"from transformers import pipeline; print('Transformers is OK')\" Hugging Face Cache Configuration Fix Hugging Face cache issues: # Remove default Hugging Face cache to prevent space errors rm -rf ~/.cache/huggingface # Set a new cache directory (temporary) export TRANSFORMERS_CACHE=/Users/nagendrachaudhary/Desktop/sentiment/.hf_cache # Create the new cache directory mkdir -p /Users/nagendrachaudhary/Desktop/sentiment/.hf_cache VS Code Extensions The following VS Code extensions are recommended: ms-python.python ms-python.vscode-pylance charliermarsh.ruff ms-python.pylint george-alisson.html-preview-vscode ms-toolsai.jupyter and its dependencies foxundermoon.shell-format aaron-bond.better-comments github.vscode-github-actions github.copilot github.copilot-chat github.vscode-pull-request-github You can install these using the provided script: # Make the script executable chmod +x install-extensions.sh # Run the script ./install-extensions.sh","title":"Setup"},{"location":"setup/#setup-instructions","text":"This page documents all the steps needed to set up the Sentiment Analysis project environment.","title":"Setup Instructions"},{"location":"setup/#prerequisites","text":"Python 3.10 or higher pip package manager Git","title":"Prerequisites"},{"location":"setup/#environment-setup","text":"","title":"Environment Setup"},{"location":"setup/#virtual-environment","text":"Create and activate a Python virtual environment: # Create a virtual environment python -m venv env # Activate the environment source env/bin/activate","title":"Virtual Environment"},{"location":"setup/#required-packages","text":"Install FastAPI and other required packages: # Install FastAPI pip install fastapi # Install cookiecutter pip install cookiecutter # Install cookiecutter data science template pip install cookiecutter-data-science","title":"Required Packages"},{"location":"setup/#transformers-setup","text":"Verify Transformers installation: # Verify Transformers is installed and importable python -c \"from transformers import pipeline; print('Transformers is OK')\"","title":"Transformers Setup"},{"location":"setup/#hugging-face-cache-configuration","text":"Fix Hugging Face cache issues: # Remove default Hugging Face cache to prevent space errors rm -rf ~/.cache/huggingface # Set a new cache directory (temporary) export TRANSFORMERS_CACHE=/Users/nagendrachaudhary/Desktop/sentiment/.hf_cache # Create the new cache directory mkdir -p /Users/nagendrachaudhary/Desktop/sentiment/.hf_cache","title":"Hugging Face Cache Configuration"},{"location":"setup/#vs-code-extensions","text":"The following VS Code extensions are recommended: ms-python.python ms-python.vscode-pylance charliermarsh.ruff ms-python.pylint george-alisson.html-preview-vscode ms-toolsai.jupyter and its dependencies foxundermoon.shell-format aaron-bond.better-comments github.vscode-github-actions github.copilot github.copilot-chat github.vscode-pull-request-github You can install these using the provided script: # Make the script executable chmod +x install-extensions.sh # Run the script ./install-extensions.sh","title":"VS Code Extensions"},{"location":"usage/","text":"Usage Instructions This page provides instructions on how to use the Sentiment Analysis project. Running the API Server To start the FastAPI server: # Run the FastAPI app uvicorn app:app --port 5000 The API will be available at http://localhost:5000 . Documentation Server To build and serve the documentation: # Navigate to the docs directory cd docs # Install MkDocs if not already installed pip install mkdocs # Build the documentation site mkdocs build # Serve documentation locally mkdocs serve The documentation will be available at http://127.0.0.1:8000/ . API Endpoints The following endpoints are available: /sentiment : Analyze sentiment of provided text /docs : Swagger UI for API documentation (provided by FastAPI) /redoc : ReDoc UI for API documentation (provided by FastAPI) Example Usage import requests # Submit text for sentiment analysis response = requests.post( \"http://localhost:5000/sentiment\", json={\"text\": \"I love this product! It's amazing.\"} ) # Print the sentiment analysis result print(response.json())","title":"Usage"},{"location":"usage/#usage-instructions","text":"This page provides instructions on how to use the Sentiment Analysis project.","title":"Usage Instructions"},{"location":"usage/#running-the-api-server","text":"To start the FastAPI server: # Run the FastAPI app uvicorn app:app --port 5000 The API will be available at http://localhost:5000 .","title":"Running the API Server"},{"location":"usage/#documentation-server","text":"To build and serve the documentation: # Navigate to the docs directory cd docs # Install MkDocs if not already installed pip install mkdocs # Build the documentation site mkdocs build # Serve documentation locally mkdocs serve The documentation will be available at http://127.0.0.1:8000/ .","title":"Documentation Server"},{"location":"usage/#api-endpoints","text":"The following endpoints are available: /sentiment : Analyze sentiment of provided text /docs : Swagger UI for API documentation (provided by FastAPI) /redoc : ReDoc UI for API documentation (provided by FastAPI)","title":"API Endpoints"},{"location":"usage/#example-usage","text":"import requests # Submit text for sentiment analysis response = requests.post( \"http://localhost:5000/sentiment\", json={\"text\": \"I love this product! It's amazing.\"} ) # Print the sentiment analysis result print(response.json())","title":"Example Usage"}]}